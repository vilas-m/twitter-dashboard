{"version":3,"sources":["Charts/BarChart.js","Charts/TreeMap.js","Containers/Main.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","useEffect","draw","d3","select","remove","margin","height","data","month","tweets","svg","append","attr","xScale","range","domain","map","d","padding","call","selectAll","style","yScale","enter","bandwidth","id","className","TreeMap","root","name","parentId","parent","value","sum","size","console","log","leaves","x0","y0","x1","y1","text","Main","App","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f565eb6.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport default function BarChart() {\r\n  useEffect(() => {\r\n    draw();\r\n  }, []);\r\n\r\n  let draw = () => {\r\n    d3.select(\"#bar_chart\").select(\"svg\").remove();\r\n\r\n    let margin = { left: 30, bottom: 60, right: 10, top: 10 };\r\n    let width = 600;\r\n    let height = 120;\r\n\r\n    let data = [\r\n      { month: \"2019-Jan\", tweets: 9 },\r\n      { month: \"2019-Feb\", tweets: 14 },\r\n      { month: \"2019-Mar\", tweets: 18 },\r\n      { month: \"2019-April\", tweets: 27 },\r\n      { month: \"2019-May\", tweets: 58 },\r\n      { month: \"2019-June\", tweets: 54 },\r\n      { month: \"2019-July\", tweets: 147 },\r\n      { month: \"2019-Aug\", tweets: 286 },\r\n      { month: \"2019-Sept\", tweets: 284 },\r\n      { month: \"2019-Oct\", tweets: 294 },\r\n      { month: \"2019-Nov\", tweets: 274 },\r\n      { month: \"2019-Dec\", tweets: 152 },\r\n      { month: \"2020-Jan\", tweets: 59 },\r\n      { month: \"2020-Feb\", tweets: 18 },\r\n      { month: \"2020-Mar\", tweets: 67 },\r\n    ];\r\n\r\n    let svg = d3\r\n      .select(\"#bar_chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    let xScale = d3\r\n      .scaleBand()\r\n      .range([0, width])\r\n      .domain(\r\n        data.map((d) => {\r\n          return d.month;\r\n        })\r\n      )\r\n      .padding(0.1);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height})`)\r\n      .attr(\"transform\", `translate(0, ${height})`)\r\n      .call(d3.axisBottom(xScale))\r\n      .selectAll(\"text\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .attr(\"dx\", \"-.8em\")\r\n      .attr(\"dy\", \".15em\")\r\n      .attr(\"transform\", \"rotate(-45)\");\r\n\r\n    let yScale = d3.scaleLinear().domain([0, 330]).range([height, 0]);\r\n\r\n    svg.append(\"g\").call(d3.axisLeft(yScale));\r\n\r\n    svg\r\n      .selectAll(\"bars\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d) => xScale(d.month))\r\n      .attr(\"y\", (d) => yScale(d.tweets))\r\n      .attr(\"width\", xScale.bandwidth() )\r\n      .attr(\"height\", (d) => height - yScale(d.tweets))\r\n      .attr(\"fill\", \"#428a80\");\r\n  };\r\n\r\n  return <div id=\"bar_chart\" className=\"chart\"></div>;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst TreeMap = () => {\r\n  useEffect(() => {\r\n    draw();\r\n  });\r\n\r\n  let draw = () => {\r\n    let margin = { top: 10, right: 10, bottom: 10, left: 10 };\r\n    let width = 640;\r\n    let height = 270;\r\n\r\n    let svg = d3\r\n      .select(\"#treemap\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    let data = [\r\n      {\r\n        name: \"Origin\",\r\n        parent: \"\",\r\n        value: null,\r\n      },\r\n      {\r\n        name: \"grp1\",\r\n        parent: \"Origin\",\r\n        value: 12,\r\n      },\r\n      {\r\n        name: \"grp2\",\r\n        parent: \"Origin\",\r\n        value: 23,\r\n      },\r\n      {\r\n        name: \"grp3\",\r\n        parent: \"Origin\",\r\n        value: 11,\r\n      },\r\n      {\r\n        name: \"grp4\",\r\n        parent: \"Origin\",\r\n        value: 40,\r\n      },\r\n      {\r\n        name: \"grp5\",\r\n        parent: \"Origin\",\r\n        value: 30,\r\n      },\r\n      {\r\n        name: \"grp6\",\r\n        parent: \"Origin\",\r\n        value: 25,\r\n      },\r\n    ];\r\n\r\n    var root = d3\r\n      .stratify()\r\n      .id(function (d) {\r\n        return d.name;\r\n      }) // Name of the entity (column name is name in csv)\r\n      .parentId(function (d) {\r\n        return d.parent;\r\n      })(\r\n      // Name of the parent (column name is parent in csv)\r\n      data\r\n    );\r\n    root.sum(function (d) {\r\n      return +d.value;\r\n    }); // Compute the numeric value for each entity\r\n\r\n    // Then d3.treemap computes the position of each element of the hierarchy\r\n    // The coordinates are added to the root object above\r\n    d3.treemap().size([width, height]).padding(4)(root);\r\n\r\n    console.log(root.leaves());\r\n    // use this information to add rectangles:\r\n    svg\r\n      .selectAll(\"rect\")\r\n      .data(root.leaves())\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", function (d) {\r\n        return d.x0;\r\n      })\r\n      .attr(\"y\", function (d) {\r\n        return d.y0;\r\n      })\r\n      .attr(\"width\", function (d) {\r\n        return d.x1 - d.x0;\r\n      })\r\n      .attr(\"height\", function (d) {\r\n        return d.y1 - d.y0;\r\n      })\r\n      .style(\"stroke\", \"black\")\r\n      .style(\"fill\", \"#69b3a2\");\r\n\r\n    // and to add the text labels\r\n    svg\r\n      .selectAll(\"text\")\r\n      .data(root.leaves())\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", function (d) {\r\n        return d.x0 + 10;\r\n      }) // +10 to adjust position (more right)\r\n      .attr(\"y\", function (d) {\r\n        return d.y0 + 20;\r\n      }) // +20 to adjust position (lower)\r\n      .text(function (d) {\r\n        return d.data.name;\r\n      })\r\n      .attr(\"font-size\", \"15px\")\r\n      .attr(\"fill\", \"white\");\r\n  };\r\n\r\n  return <div id=\"treemap\"></div>;\r\n};\r\n\r\nexport default TreeMap;\r\n","import React from \"react\";\r\nimport BarChart from \"../Charts/BarChart\";\r\nimport TreeMap from \"../Charts/TreeMap\";\r\n// import WordCloud from \"../Charts/WordCloud\";\r\nimport \"./styles.scss\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"left-half\">\r\n        <div className=\"l-content-1\"></div>\r\n        <div className=\"l-content-2\"></div>\r\n        <div className=\"l-content-3\">\r\n          <BarChart />\r\n        </div>\r\n        <div className=\"l-content-4\">\r\n          <TreeMap />\r\n        </div>\r\n      </div>\r\n      <div className=\"right-half\">\r\n        {/* <WordCloud /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Main from \"./Containers/Main\";\n\nfunction App() {\n  return (\n    <div style={{ width: \"100%\", height: \"100vh\" }}>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}